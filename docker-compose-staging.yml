# docker-compose-prod.yml

services:
  frontend:
    platform: linux/amd64
    image: sjbdeck/deck-frontend:staging
    ports:
      - "8080:80" # staging apache server will proxy to port 8080
      - "4443:443" # staging apache server will proxy to port 4443
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    depends_on:
      - backend
      - certbot

  backend:
    platform: linux/amd64
    image: sjbdeck/deck-backend:staging
    env_file:
      - .env 
    expose:
      - "8000"
    environment:
      DB_USER: ${MYSQL_USER}
      DB_PW: ${MYSQL_PASSWORD}
      DB_HOST: mysql
    depends_on:
      - mysql
    command: >
      sh -c "
        ./wait-for-it.sh mysql:3306 -- 
        ./startup.sh &&
        gunicorn --config gunicorn_config.py deck.wsgi:application
      "
  
  certbot:
    image: certbot/certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 168h & wait $${!}; done;'"

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: deck
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3307:3306" # staging mysql server will run on port 3307
    volumes:
      - deck_data:/var/lib/mysql

volumes:
  deck_data:
